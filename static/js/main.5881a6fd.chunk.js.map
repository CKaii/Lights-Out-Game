{"version":3,"sources":["components/Cell.js","components/Board.js","components/App.js","index.js"],"names":["Cell","handleClick","e","_this","props","flipCellsAroundMe","classes","this","isLit","react_default","a","createElement","className","onClick","Component","Board","state","hasWon","board","createBoard","y","nrows","row","x","ncols","push","Math","random","chanceLightStartsOn","coord","_this$props","_coord$split$map","split","map","Number","_coord$split$map2","Object","slicedToArray","flipCell","every","cell","setState","_this2","tableBoard","_loop","concat","src_components_Cell","key","flipCellsAround","defaultProps","App","src_components_Board","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5881a6fd.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport \"./Cell.css\"\n\nclass Cell extends Component {\n  handleClick = (e) => {\n    this.props.flipCellsAroundMe();\n  }\n\n  render() {\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n\n    return (\n        <td className={classes} onClick={this.handleClick} />\n    )\n  }\n}\n\n\nexport default Cell\n","import React, { Component } from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport './Board.css';\r\n\r\nclass Board extends Component {\r\n  static defaultProps = {\r\n    nrows: 5,\r\n    ncols: 5,\r\n    chanceLightStartsOn: 0.25\r\n  }\r\n\r\n  state = {\r\n    hasWon: false,\r\n    board: this.createBoard()\r\n  }\r\n\r\n  createBoard() {\r\n    let board = [];\r\n    for (let y = 0; y < this.props.nrows; y++) {\r\n      let row = [];\r\n      for (let x = 0; x < this.props.ncols; x++) {\r\n        row.push(Math.random() < this.props.chanceLightStartsOn)\r\n      }\r\n      board.push(row);\r\n    }\r\n    return board\r\n  }\r\n\r\n  flipCellsAround(coord) {\r\n    let {\r\n      ncols,\r\n      nrows\r\n    } = this.props;\r\n    let board = this.state.board;\r\n    let [y, x] = coord.split(\"-\").map(Number);\r\n\r\n\r\n    function flipCell(y, x) {\r\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\r\n        board[y][x] = !board[y][x];\r\n      }\r\n    }\r\n\r\n    flipCell(y, x);\r\n    flipCell(y, x - 1);\r\n    flipCell(y, x + 1);\r\n    flipCell(y - 1, x);\r\n    flipCell(y + 1, x);\r\n\r\n    const hasWon = board.every(row => row.every(cell => !cell))\r\n\r\n    this.setState({ board: board, hasWon: hasWon})\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasWon) {\r\n      return(\r\n        <div className='board-title'>\r\n          <div className='winner'>\r\n            <span className='neon-orange'>YOU</span>\r\n            <span className='neon-blue'>WIN</span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    let tableBoard = [];\r\n    for (let y = 0; y < this.props.nrows; y++) {\r\n      let row = [];\r\n      for (let x = 0; x < this.props.ncols; x++) {\r\n        let coord = `${y}-${x}`;\r\n        row.push(<Cell\r\n                    key={coord}\r\n                    isLit={this.state.board[y][x]}\r\n                    flipCellsAroundMe={() => this.flipCellsAround(coord)}\r\n                  />)\r\n      }\r\n      tableBoard.push(<tr key={y}>{row}</tr>)\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <div className='board-title'>\r\n          <div className='neon-orange'>Lights</div>\r\n          <div className='neon-blue'>Out</div>\r\n        </div>\r\n        <table className='Board'>\r\n          <tbody>\r\n            {tableBoard}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\nimport Board from \"./Board\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}